//
//  NewsListViewControllerTests.swift
//  BlognoneDemo
//
//  Created by Suraphan 'Rawd' Laokondee on 6/23/2560 BE.
//  Copyright (c) 2560 Suraphan 'Rawd' Laokondee. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

@testable import BlognoneDemo
import XCTest

class NewsListViewControllerTests: XCTestCase {
  // MARK: - Subject under test
  
  var sut: NewsListViewController!
  var window: UIWindow!
  
  // MARK: - Test lifecycle
  
  override func setUp() {
    super.setUp()
    window = UIWindow()
    setupNewsListViewController()
  }
  
  override func tearDown() {
    window = nil
    super.tearDown()
  }
  
  // MARK: - Test setup
  
  func setupNewsListViewController() {
    let bundle = Bundle.main
    let storyboard = UIStoryboard(name: "NewsList", bundle: bundle)
    sut = storyboard.instantiateViewController(withIdentifier: "NewsListViewController") as! NewsListViewController
  }
  
  func loadView() {
    window.addSubview(sut.view)
    RunLoop.current.run(until: Date())
  }
  
  // MARK: - Test doubles 
  // 1 demo NewsListViewControllerOutputSpy
  
  class NewsListViewControllerOutputSpy: NewsListViewControllerOutput {
    
    // MARK: Method call expectations
    var fetchNewsListCalled = false
    
    // MARK: Spied methods
    func fetchNewsFeed(request: NewsList.RequestNewsFeed.Request) {
      fetchNewsListCalled = true
    }
  }

  // 2 demo TableViewSpy
  class TableViewSpy: UITableView {
    // MARK: Method call expectations
    var reloadDataCalled = false
    
    // MARK: Spied methods
    override func reloadData() {
      reloadDataCalled = true
    }
  }
  
  // MARK: - Tests
  
  func testShouldFetchNewsListWhenViewIsLoaded() {
    // 3 demo FetchNewsListWhenViewIsLoaded
    
    // Given
    let newsListViewControllerOutputSpy = NewsListViewControllerOutputSpy()
    sut.output = newsListViewControllerOutputSpy
    
    // When
    loadView()
    
    // Then
    XCTAssert(newsListViewControllerOutputSpy.fetchNewsListCalled, "Should fetch NewsList when the view is loaded")
  }
  
  func testShouldDisplayFetchedNewsList() {
    // 4 demo ShouldDisplayFetchedNewsList
    // Given
    let tableViewSpy = TableViewSpy()
    sut.newsTableView = tableViewSpy
    
    let displayedNewsList = [NewsList.RequestNewsFeed.ViewModel.NewsFeed(title: "Title", creator: "Creator", publishDate: "6/29/60")]
    let viewModel = NewsList.RequestNewsFeed.ViewModel(displayNewsFeed: displayedNewsList)
    
    // When
    sut.displayRequestNewsFeed(viewModel: viewModel)
    
    // Then
    XCTAssert(tableViewSpy.reloadDataCalled, "Displaying fetched orders should reload the table view")
  }

}
