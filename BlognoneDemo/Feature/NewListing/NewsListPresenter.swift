//
//  NewsListPresenter.swift
//  BlognoneDemo
//
//  Created by Suraphan 'Rawd' Laokondee on 6/23/2560 BE.
//  Copyright (c) 2560 Suraphan 'Rawd' Laokondee. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol NewsListPresenterInput {
  func presentRequestNewsFeed(response: NewsList.RequestNewsFeed.Response)
}

protocol NewsListPresenterOutput: class {
  func displayRequestNewsFeed(viewModel: NewsList.RequestNewsFeed.ViewModel)
}

class NewsListPresenter: NewsListPresenterInput {
  weak var output: NewsListPresenterOutput!
  
  // MARK: - Presentation logic
  
  func presentRequestNewsFeed(response: NewsList.RequestNewsFeed.Response) {
    // 4 demo presentRequestNewsFeed
    // NOTE: Format the response from the Interactor and pass the result back to the View Controller
    let myLocale = Locale(identifier: "th_TH")
    let dateFormatter = DateFormatter()
    dateFormatter.dateStyle = .short
    dateFormatter.timeStyle = .none
    dateFormatter.locale = myLocale
    
    let newsFeeds = response.newsList.flatMap { (news) -> NewsList.RequestNewsFeed.ViewModel.NewsFeed in
      let stringFromDate = dateFormatter.string(from: news.publishDate)
      return NewsList.RequestNewsFeed.ViewModel.NewsFeed(title: news.title,
                                                         creator: news.creator,
                                                         publishDate: stringFromDate)
    }
    let viewModel = NewsList.RequestNewsFeed.ViewModel(displayNewsFeed: newsFeeds)
    output.displayRequestNewsFeed(viewModel: viewModel)
  }
}
